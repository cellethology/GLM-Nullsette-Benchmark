import pickle

"""
1. 
2. zahm_cds: the first G- is kozak+4
3. terminator here is polyA signal, which includes a conservative region, aataaa
"""

zahm_dict = pickle.load(open('database/pkls/zahm_promoter.pkl', 'rb'))
zahm_cds = ('GAAGATGCCAAAAACATTAAGAAGGGCCCAGCGCCATTCTACCCACTCGAAGACGGGACCGCCGGCGAGCAGCTGCACAAAGCCATGAAGCGCTACGCCCTGGTGC'
            'CCGGCACCATCGCCTTTACCGACGCACATATCGAGGTGGACATTACCTACGCCGAGTACTTCGAGATGAGCGTTCGGCTGGCAGAAGCTATGAAGCGCTATGGGCTG'
            'AATACAAACCATCGGATCGTGGTGTGCAGCGAGAATAGCTTGCAGTTCTTCATGCCCGTGTTGGGTGCCCTGTTCATCGGTGTGGCTGTGGCCCCAGCTAACGACAT'
            'CTACAACGAGCGCGAGCTGCTGAACAGCATGGGCATCAGCCAGCCCACCGTCGTATTCGTGAGCAAGAAAGGGCTGCAAAAGATCCTCAACGTGCAAAAGAAGCTAC'
            'CGATCATACAAAAGATCATCATCATGGATAGCAAGACCGACTACCAGGGCTTCCAAAGCATGTACACCTTCGTGACTTCCCATTTGCCACCCGGCTTCAACGAGTAC'
            'GACTTCGTGCCCGAGAGCTTCGACCGGGACAAAACCATCGCCCTGATCATGAACAGTAGTGGCAGTACCGGATTGCCCAAGGGCGTAGCCCTACCGCACCGCACCGC'
            'TTGTGTCCGATTCAGTCATGCCCGCGACCCCATCTTCGGCAACCAGATCATCCCCGACACCGCTATCCTCAGCGTGGTGCCATTTCACCACGGCTTCGGCATGTTCA'
            'CCACGCTGGGCTACTTGATCTGCGGCTTTCGGGTCGTGCTCATGTACCGCTTCGAGGAGGAGCTATTCTTGCGCAGCTTGCAAGACTATAAGATTCAATCTGCCCTG'
            'CTGGTGCCCACACTATTTAGCTTCTTCGCTAAGAGCACTCTCATCGACAAGTACGACCTAAGCAACTTGCACGAGATCGCCAGCGGCGGGGCGCCGCTCAGCAAGGA'
            'GGTAGGTGAGGCCGTGGCCAAACGCTTCCACCTACCAGGCATCCGCCAGGGCTACGGCCTGACAGAAACAACCAGCGCCATTCTGATCACCCCCGAAGGGGACGACA'
            'AGCCTGGCGCAGTAGGCAAGGTGGTGCCCTTCTTCGAGGCTAAGGTGGTGGACTTGGACACCGGCAAGACACTGGGTGTGAACCAGCGCGGCGAGCTGTGCGTCCGT'
            'GGCCCCATGATCATGAGCGGCTACGTTAACAACCCCGAGGCTACAAACGCTCTCATCGACAAGGACGGCTGGCTGCACAGCGGCGACATCGCCTACTGGGACGAGGA'
            'CGAGCACTTCTTCATCGTGGACCGGCTGAAGAGCCTGATCAAATACAAGGGCTACCAGGTAGCCCCAGCCGAACTGGAGAGCATCCTGCTGCAACACCCCAACATCT'
            'TCGACGCCGGGGTCGCCGGCCTGCCCGACGACGATGCCGGCGAGCTGCCCGCCGCAGTCGTCGTGCTGGAACACGGTAAAACCATGACCGAGAAGGAGATCGTGGAC'
            'TATGTGGCCAGCCAGGTTACAACCGCCAAGAAGCTGCGCGGTGGTGTTGTGTTCGTGGACGAGGTGCCTAAAGGACTGACCGGCAAGTTGGACGCCCGCAAGATCCG'
            'CGAGATTCTCATTAAGGCCAAGAAGGGCGGCAAGATCGCCGTG')
linker2 = 'TAATCGTTCCTCTAGABDHVBDHVBDHVHVDBHVDBHVDBACTAGTACACTCCCCGTCGATCAGGGTGGTTACGTCAGTCACCGGTCGA'
terminator1 = 'CTGTGCCTTCTAGTTGCCAGCCATCTGTTGTTTGCCCCTCCCCCGTGCCTTCCTTGACCCTGGAAGGTGCCACTCCCACTGTCCTTTCCT'
terminator_conservative = 'AATAAA'
terminator2 = 'ATGAGGAAATTGCATCGCATTGTCTGAGTAGGTGTCATTCTATTCTGGGGGGTGGGGTGGGGCAGGACAGCAAGGGGGAGGATTGGGAAGACAATAGCAGGCATGCTGGGGATGCGGTGGGCTCTATGG'

mammlian_zahm_minCMV = {
    'tre_unit': '',
    'promoter': 'GTAGGCGTGTACGGTGGGAGGTCTATATAAGCAGAGCTCGTTTAGTGAACCGTCAGATC',
    'linker1': 'CA',
    'kozak_part1': 'GCCACC',
    'start_codon': 'ATG',
    # 'kozak+4': 'G',
    'cds': zahm_cds,
    'stop_codon': 'TAA',
    'linker2': linker2,
    'terminator1': terminator1,
    'terminator_conservative': terminator_conservative,
    'terminator2': terminator2
}

mammlian_zahm_minProm = {
    'promoter': 'tagagggtatataatggaagctcgacttccag'.upper(),
    'linker1': 'cttggcaatccggtactgttggtaaa'.upper(),
    'kozak_part1': 'GCCACC',
    'start_codon': 'ATG',
    # 'kozak+4': 'G',
    'cds': zahm_cds,
    'stop_codon': 'TAA',
    'linker2': linker2,
    'terminator1': terminator1,
    'terminator_conservative': terminator_conservative,
    'terminator2': terminator2
}

mammlian_zahm_minTK = {
    'promoter': 'TTCGCATATTAAGGTGACGCGTGTGGCCTCGAACACCGAGCGACCCTGCAGCGACCCGCTTAA',
    'kozak_part1': 'GCCACC',
    'start_codon': 'ATG',
    # 'kozak+4': 'G',
    'cds': zahm_cds,
    'stop_codon': 'TAA',
    'linker2': linker2,
    'terminator1': terminator1,
    'terminator_conservative': terminator_conservative,
    'terminator2': terminator2
}
zahm_database = {
    'zahm_tre_dict': zahm_dict,
    'zahm_cassette': {
        'minCMV': mammlian_zahm_minCMV,
        'minProm': mammlian_zahm_minProm,
        'minTK': mammlian_zahm_minTK
    }
}